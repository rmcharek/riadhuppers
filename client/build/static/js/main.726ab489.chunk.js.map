{"version":3,"sources":["products/ProductListForm.tsx","products/Utilities/ProductRestClient.tsx","products/Product.tsx","login/utilities/Login.tsx","login/Login.tsx","Nav.styles.ts","Nav.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","table","minWidth","withRouter","products","match","useState","open","id","orderBy","order","classes","useHistory","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","name","description","price","key","f_asyncRetrieveProductsData","token_param","a","fetch","headers","trim","then","resp","json","response","console","log","history","setProducts","useEffect","token_localstorage_param","localStorage","getItem","result","fetchData","f_asyncLogin","user_param","password_param","user_password_param","method","body","JSON","stringify","status","setItem","AddToLocalStorage","token","data","Login","error","onLogin","username","useRef","password","localError","setLocalError","current","focus","handleSubmit","useCallback","event","preventDefault","value","prevState","update","$set","onSubmit","htmlFor","type","ref","Toolbar","styled","MatToolbar","onLogout","React","anchorEl","setAnchorEl","handleLogout","push","handleMenuOpen","currentTarget","handleMenuClose","AppBar","IconButton","edge","color","onClick","Menu","keepMounted","Boolean","onClose","MenuItem","to","App","loggedIn","setLoggedIn","handleLogin","path","exact","render","Product","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.726ab489.chunk.js","sourcesContent":["//import React from 'react';\r\nimport React, { useState, ChangeEvent, useCallback, MouseEvent } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n////////\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\n\r\nimport { Link, withRouter, RouteComponentProps , useHistory} from 'react-router-dom';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from 'react-router-dom';\r\n\r\nimport Product from '../products/gateway/Product';\r\n\r\ninterface Props {\r\n  products: Product[];\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n\r\nfunction List_New({ products,  match, }: Props & RouteComponentProps) \r\n{\r\n                const [deleteDialog, setDeleteDialog] = useState<{ open: boolean;id: number; }>  ({ open: false, id: 0 });\r\n                const [filter, setFilter] = useState('');\r\n                const [sort, setSort] = useState<{ orderBy: keyof Product; order: 'asc' | 'desc';  }> ({ orderBy: 'name', order: 'asc', });\r\n\r\n                const createSortHandler = (columnId: keyof Product) => {\r\n                                                                        return () => {\r\n                                                                          setSort({ orderBy: columnId, order: sort.order === 'asc' ? 'desc' : 'asc', });\r\n                                                                        };\r\n                                                             };\r\n\r\n\r\nconst history = useHistory();\r\n  const classes = useStyles();\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\" >\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>ID</TableCell>\r\n            <TableCell align=\"right\">Name </TableCell>\r\n            <TableCell align=\"right\">Description</TableCell>\r\n            <TableCell align=\"right\">Price</TableCell>\r\n            <TableCell align=\"right\">Key</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody   >\r\n          {products.map((row) => (\r\n            <TableRow key={row.name}  >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.id}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.name}</TableCell>\r\n              <TableCell align=\"right\">{row.description}</TableCell>\r\n              <TableCell align=\"right\">{row.price}</TableCell>\r\n              <TableCell align=\"right\">{row.key}</TableCell>\r\n              \r\n\r\n              \r\n   \r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      \r\n    </TableContainer>\r\n   \r\n  );\r\n}\r\n\r\nexport default withRouter(List_New);","import React, { useState, useEffect } from 'react';\r\n\r\n//Retrieve Products\r\nconst f_asyncRetrieveProductsData =  async (token_param)  =>  {\r\n   let response;\r\n     await fetch('/product', {\r\n                                                      headers: {\r\n      'Accept': 'application/json',\r\n      'Authorization': 'Bearer ' + token_param.trim(),\r\n      'Content-Type': 'application/json'\r\n   }\r\n                                                    \r\n                                                     })\r\n                                                     .then(resp => resp.json())\r\n                                                     .then( (json) => {   response=json.products;\r\n                                                                          console.log(json); \r\n                                                                      })\r\n\r\n\r\nreturn response;\r\n}\r\nexport  {f_asyncRetrieveProductsData}\r\n\r\n","import React, { useState, useEffect } from 'react';\n//import Animal from '../game/product/Animal';\n\nimport List_New from './ProductListForm';\nimport update from 'immutability-helper';\n\nimport { Route, withRouter, RouteComponentProps } from 'react-router';\n\nimport Product from '../products/gateway/Product';\n\nimport {f_asyncRetrieveProductsData} from './Utilities/ProductRestClient';\n\nfunction ProductForm({ match: adminRouteMatch, history }: RouteComponentProps) \n{\nlet  [products, setProducts] = useState<Product[]>([]);\nlet ProductList_param;\nlet jsondata;\nlet response;\n\n           useEffect(() => { \n                    async function fetchData() \n                    {\n                       //RETRIEVE DB PRODUCTS\n                       //get token from local storage\n                         let  token_localstorage_param =  localStorage.getItem('token_param');\n\n                         let result = await f_asyncRetrieveProductsData (token_localstorage_param);\n                         setProducts(result);\n                    }\n                     fetchData();\n                    }, []);\n\n  \n\n \n\n  return (\n    <>\n      <List_New    products={products}     />\n    </>\n ); // end return\n}\n\nexport default withRouter(ProductForm);","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\n//LOGIN\r\nconst f_asyncLogin =  async (user_param, password_param)  =>  {\r\n  \r\n\r\n    let user_password_param = {\"username\": user_param,\"password\": password_param};\r\n\r\n    let response =  await fetch('/login',  {\r\n                                                          method: 'POST',\r\n                                                          headers: {\r\n                                                                     'Content-Type': 'application/json;charset=utf-8'\r\n                                                                   },\r\n                                                                   body: JSON.stringify(user_password_param)\r\n                                                        });\r\n   \r\n  \r\n    if (response.status == 401) {\r\n       return 401;\r\n    } else {\r\n        var result  = await response.json();\r\n       //save token in local storage\r\n       localStorage.setItem('token_param', AddToLocalStorage(result.token));\r\n       //Return\r\n       return 1;\r\n      \r\n    }\r\n}\r\n // this function converts JSON into string to be entered into localStorage\r\n function AddToLocalStorage(data) {\r\n if (typeof data != \"string\") {data = JSON.stringify(data);}\r\n     return data;\r\n }\r\n\r\nexport  {f_asyncLogin}\r\n\r\n","import React, {\n  FormEvent,\n  useRef,\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\nimport update from 'immutability-helper';\n\nimport {f_asyncLogin} from './utilities/Login';\n\nimport './Login.scss';\n\ninterface Props {\n  onLogin: (username: string, password: string) => void;\n  error: string;\n}\n\nexport default function Login({ error, onLogin }: Props) {\n  const username = useRef<HTMLInputElement>(null);\n  const password = useRef<HTMLInputElement>(null);\n\n  const [localError, setLocalError] = useState('');\n\n  useEffect(() => {\n    username.current!.focus();\n  });\n\n  const handleSubmit = useCallback((event: FormEvent<HTMLFormElement>) => {\n\n    event.preventDefault();\n    let error = 'Bitte Benutzernamen und Passwort angeben.';\n    if (username.current!.value && username.current!.value) {\n      error = '';\n      onLogin(username.current!.value, password.current!.value);\n    }\n    setLocalError(prevState => update(prevState, { $set: error }));\n  }, []);\n\n\n\n  return (\n    <form onSubmit={handleSubmit} className=\"login\">\n      {(error !== '' || localError !== '') && (\n        <div className=\"error\">\n          {error} {localError}\n        </div>\n      )}\n      <div>\n        <label htmlFor=\"\">Benutzername:</label>\n        <input type=\"text\" id=\"username\" ref={username!} />\n      </div>\n      <div>\n        <label htmlFor=\"\">Passwort:</label>\n        <input type=\"password\" id=\"password\" ref={password} />\n      </div>\n      <button type=\"submit\">anmelden</button>\n    </form>\n  );\n}\n","import styled from 'styled-components';\nimport { Toolbar as MatToolbar } from '@material-ui/core';\n\nexport const Toolbar = styled(MatToolbar)`\n  &&& {\n    display: flex;\n    justify-content: space-between;\n  }\n` as typeof MatToolbar;\n","import React, { useCallback } from 'react';\n\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport { AppBar, IconButton, Menu, MenuItem } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ExitIcon from '@material-ui/icons/ExitToApp';\nimport { Link } from 'react-router-dom';\nimport { Toolbar } from './Nav.styles';\n\ninterface Props {\n  onLogout: () => void;\n}\n\nfunction Nav({ history, onLogout }: RouteComponentProps & Props) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const handleLogout = useCallback(() => {\n    onLogout();\n    history.push('/');\n  }, [onLogout]);\n\n  const handleMenuOpen = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) =>\n      setAnchorEl(event.currentTarget),\n    [setAnchorEl]\n  );\n\n  const handleMenuClose = useCallback(() => setAnchorEl(null), [setAnchorEl]);\n\n\n  return (\n    <AppBar>\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"Menu\"\n          onClick={handleMenuOpen}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          id=\"navigation-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleMenuClose}\n        >\n          \n          <MenuItem onClick={handleMenuClose}>\n            <Link to=\"/products/products\">Products</Link>\n          </MenuItem>\n          \n\n        </Menu>\n        <IconButton\n          edge=\"end\"\n          color=\"inherit\"\n          aria-label=\"Logout\"\n          onClick={handleLogout}\n        >\n          <ExitIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default withRouter(Nav);\n","import React, { useCallback, useState } from 'react';\nimport './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport Product from './products/Product';\n\nimport { f_asyncLogin } from './login/utilities/Login';\n\n\nimport Login from './login/Login';\n\nimport Nav from './Nav';\nimport NotFound from './NotFound';\n\nexport default function App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const handleLogin = useCallback(\n    async (username, password) => {\n      const result = await f_asyncLogin(username, password);\n      if (result == 1) {\n        username = 'user';\n        password = 'password';\n        setLoggedIn(username === 'user' && password === 'password');\n      }\n    },\n\n    [],\n  );\n\n\n  const handleLogout = useCallback(() => setLoggedIn(false), []);\n\n\n  // <Route component={From} path=\"/ProductProfile\" />\n  return (\n    <Router>\n      {loggedIn && <Nav onLogout={handleLogout} />}\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={() => {\n            if (loggedIn) {\n              return <Redirect to=\"/game\" />;\n            }\n            return <Login onLogin={handleLogin} error=\"\" />;\n          }}\n        />\n        <Route path=\"/products/products\">\n          {() => {\n            if (loggedIn) {\n              return <Product />;\n            }\n            return <Redirect to=\"/\" />;\n          }}\n        </Route>\n\n      </Switch>\n    </Router>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}